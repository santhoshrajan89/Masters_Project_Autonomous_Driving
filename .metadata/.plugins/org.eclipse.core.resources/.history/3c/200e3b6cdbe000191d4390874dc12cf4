package reverse;

import java.io.IOException;

import pathplanner.Astar;
import unity_communication.packetsender;
import unity_communication.position_parser;


public class Revsteer {
	public Astar astar;
	double[] pos= new double[6];
	byte[] data= ("0,0").getBytes();
	double orient;
	packetsender send;
	reverse_controller rc;
	pathplanner.Path ret;
	int index;
	public Revsteer() throws IOException, InterruptedException			
	{
	
	position_parser parser=new position_parser();
	pos=parser.position_parser(data);
	
	
	orient=Math.toDegrees(Math.atan((double)(pos[0]-pos[2])/(double)(pos[1]-pos[3])));
	System.out.println("the present orient is"+orient);
	
	//get the position of x3, y3
	
	//do Astar for x3,y3 to the desired dock yard 
	
	//x3 should be at 40 same y
	
	astar=new Astar((int)pos[2], (int)pos[3],40 ,(int)pos[3]);
	
	ret=astar.retval();
		index=astar.indret();
      rc=new reverse_controller(ret,index);
	
	
	
  
	
	}
}
